// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameApi.Data;

#nullable disable

namespace VideoGameApi.Migrations
{
    [DbContext(typeof(VideoGameDBContext))]
    [Migration("20250903191713_UpdatingPuplisherAsAListOfStringAndSeeding")]
    partial class UpdatingPuplisherAsAListOfStringAndSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VideoGameApi.Models.VideoGame", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Developer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("VideoGames");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Developer = "Nintendo",
                            Platform = "Nintendo Switch",
                            Publisher = "[\"Nintendo\",\"Nintendo2\",\"Nintendo3\"]",
                            Title = "The Legend of Zelda: Breath of the Wild"
                        },
                        new
                        {
                            id = 2,
                            Developer = "Santa Monica Studio",
                            Platform = "PlayStation 4",
                            Publisher = "[\"Sony Interactive Entertainment\",\"Nintendo\",\"\"]",
                            Title = "God of War"
                        },
                        new
                        {
                            id = 3,
                            Developer = "Rockstar Games",
                            Platform = "PlayStation 4, Xbox One, PC",
                            Publisher = "[\" Rockstar Games\",\"Sony Interactive Entertainment\"]",
                            Title = "Red Dead Redemption 2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
